{"version":3,"sources":["logo.svg","components/Wrapper.js","components/Loading.js","components/Nav.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","Component","alert","console","log","lastTime","vendors","x","length","window","requestAnimationFrame","cancelAnimationFrame","callback","element","currTime","Date","getTime","timeToCall","Math","max","id","setTimeout","clearTimeout","movePoint","ticking","isWheel","list","document","querySelector","transformPrefix","getComputedStyle","msTransform","mozTransform","webkitTransform","getTransX","listMoveX","parseInt","split","listMoveEnd","scrollWidth","offsetWidth","wheelEvent","e","type","wheelDelta","deltaX","deltaY","style","listMoving","addEventListener","removeEventListener","className","replace","class","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"+JAAAA,EAAOC,QAAU,IAA0B,kC,4GC8H5BC,G,WC5HOC,YCAJA,Y,wKFGT,WACGC,MAAM,gBACNC,QAAQC,IAAI,QAGZ,IAFA,IAAIC,EAAW,EACXC,EAAU,CAAC,KAAM,MAAO,SAAU,KAC7BC,EAAI,EAAGA,EAAID,EAAQE,SAAWC,OAAOC,wBAAyBH,EACnEE,OAAOC,sBAAwBD,OAAOH,EAAQC,GAAK,yBACnDE,OAAOE,qBAAuBF,OAAOH,EAAQC,GAAK,yBAA2BE,OAAOH,EAAQC,GAAK,+BAGhGE,OAAOC,wBACRD,OAAOC,sBAAwB,SAAUE,EAAUC,GAC/C,IAAIC,GAAW,IAAIC,MAAOC,UACtBC,EAAaC,KAAKC,IAAI,EAAG,IAAML,EAAWT,IAC1Ce,EAAKX,OAAOY,YAAW,WAAcT,EAASE,EAAWG,KAAgBA,GAE7E,OADAZ,EAAWS,EAAWG,EACfG,IAGVX,OAAOE,uBACRF,OAAOE,qBAAuB,SAAUS,GACpCE,aAAaF,KArBxB,GAyBD,IAAIG,EAAY,EACZC,GAAU,EACVC,GAAU,EAEVC,EAAOC,SAASC,cAAc,MAC9BC,EAAkBC,iBAAiBJ,GAAMK,YAAc,cACvDD,iBAAiBJ,GAAMM,aAAe,eAClCF,iBAAiBJ,GAAMO,gBAAkB,kBAAoB,YACjEC,EAAYJ,iBAAiBJ,GAAMG,GACnCM,EAAYC,SAASF,EAAUG,MAAM,KAAK,IAC1CC,GAAuD,GAAxCZ,EAAKa,YAAcb,EAAKc,aAa3C,SAASC,EAAWC,GAChBnB,GAAuB,cAAVmB,EAAEC,KAAuBD,EAAEE,WAAaF,EAAEG,SAAWH,EAAEI,OAC/DtB,GACDf,OAAOC,uBAAsB,YAdrC,SAAoBa,IAChBY,GAAaZ,GACG,EACZY,EAAY,EACLA,EAAYG,IACnBH,EAAYG,GAEhBnC,QAAQC,IAAIyB,EAAiBM,GAC7BT,EAAKqB,MAAMlB,GAAmB,cAAgBM,EAAY,MAOlDa,CAAWzB,GACXC,GAAU,KAGlBA,GAAU,EAmBd,OAhBAE,EAAKuB,iBAAiB,aAAcR,GACpCf,EAAKuB,iBAAiB,SAAS,SAAUP,GACrCD,EAAWC,GACNjB,IACDC,EAAKwB,oBAAoB,aAAcT,GACvChB,GAAU,MAIlBC,EAAKuB,iBAAiB,cAAc,SAAUP,GAC1Cf,SAASC,cAAc,QAAQuB,WAAa,sBAEhDzB,EAAKuB,iBAAiB,cAAc,SAAUP,GAC1Cf,SAASC,cAAc,QAAQuB,UAAYxB,SAASC,cAAc,QAAQuB,UAAUC,QAAQ,2BAA4B,OAIxH,yBAAKC,MAAM,WACP,yBAAKA,MAAM,kBACP,4BACI,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,6BACA,oC,GAnHFpD,cGePqD,E,uKAVX,OACE,yBAAKH,UAAU,OACb,kBAAC,EAAD,W,GAJUlD,aCMEsD,QACW,cAA7B9C,OAAO+C,SAASC,UAEe,UAA7BhD,OAAO+C,SAASC,UAEhBhD,OAAO+C,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFlC,SAASmC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLnE,QAAQmE,MAAMA,EAAMC,c","file":"static/js/main.67b19166.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport '../App.css';\r\n\r\nclass Wrapper extends Component {\r\n    render() {\r\n        (function () {\r\n            alert(\"헤헤\");\r\n            console.log(\"gpgp\");\r\n            var lastTime = 0;\r\n            var vendors = ['ms', 'moz', 'webkit', 'o'];\r\n            for (var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\r\n                window.requestAnimationFrame = window[vendors[x] + 'RequestAnimationFrame'];\r\n                window.cancelAnimationFrame = window[vendors[x] + 'CancelAnimationFrame'] || window[vendors[x] + 'CancelRequestAnimationFrame'];\r\n            }\r\n\r\n            if (!window.requestAnimationFrame)\r\n                window.requestAnimationFrame = function (callback, element) {\r\n                    var currTime = new Date().getTime();\r\n                    var timeToCall = Math.max(0, 16 - (currTime - lastTime));\r\n                    var id = window.setTimeout(function () { callback(currTime + timeToCall); }, timeToCall);\r\n                    lastTime = currTime + timeToCall;\r\n                    return id;\r\n                };\r\n\r\n            if (!window.cancelAnimationFrame)\r\n                window.cancelAnimationFrame = function (id) {\r\n                    clearTimeout(id);\r\n                };\r\n        }());\r\n\r\n        var movePoint = 0;\r\n        var ticking = false;\r\n        var isWheel = false;\r\n\r\n        var list = document.querySelector('ul');\r\n        var transformPrefix = getComputedStyle(list).msTransform ? \"msTransform\" :\r\n            getComputedStyle(list).mozTransform ? \"mozTransform\" :\r\n                getComputedStyle(list).webkitTransform ? \"webkitTransform\" : \"transform\";\r\n        var getTransX = getComputedStyle(list)[transformPrefix];\r\n        var listMoveX = parseInt(getTransX.split(',')[4]);\r\n        var listMoveEnd = (list.scrollWidth - list.offsetWidth) * -1;\r\n\r\n        function listMoving(movePoint) {\r\n            listMoveX -= movePoint;\r\n            if (listMoveX > 0) {\r\n                listMoveX = 0;\r\n            } else if (listMoveX < listMoveEnd) {\r\n                listMoveX = listMoveEnd;\r\n            }\r\n            console.log(transformPrefix, listMoveX);\r\n            list.style[transformPrefix] = 'translateX(' + listMoveX + 'px)';\r\n        }\r\n\r\n        function wheelEvent(e) {\r\n            movePoint = (e.type == \"mousewheel\" ? e.wheelDelta : e.deltaX) || e.deltaY;\r\n            if (!ticking) {\r\n                window.requestAnimationFrame(function () {\r\n                    listMoving(movePoint);\r\n                    ticking = false;\r\n                });\r\n            }\r\n            ticking = true;\r\n        }\r\n\r\n        list.addEventListener('mousewheel', wheelEvent);\r\n        list.addEventListener('wheel', function (e) {\r\n            wheelEvent(e);\r\n            if (!isWheel) {\r\n                list.removeEventListener('mousewheel', wheelEvent);\r\n                isWheel = true;\r\n            }\r\n        });\r\n\r\n        list.addEventListener('mouseenter', function (e) {\r\n            document.querySelector('html').className += ' prevent-history';\r\n        });\r\n        list.addEventListener('mouseleave', function (e) {\r\n            document.querySelector('html').className = document.querySelector('html').className.replace(/\\s?(prevent-history)\\s?/g, \"\");\r\n        });\r\n\r\n        return (\r\n            <div class=\"wrapper\">\r\n                <div class=\"scroll-wrapper\">\r\n                    <ul>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                        <li></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Wrapper;","import React, { Component } from 'react';\r\n\r\nclass Loading extends Component {\r\n    render() {\r\n       \r\n\r\n\r\n\r\n\r\n        return (\r\n            <h1></h1>\r\n        );\r\n    }\r\n\r\n\r\n}\r\n\r\nexport default Loading;","import React, { Component } from 'react';\r\nimport '../App.css';\r\nclass Nav extends Component{\r\n    render(){\r\n        return(\r\n           <div class=\"nav\">\r\n               <div class=\"nav-left nav-trans\">\r\n                    <h3>About</h3>\r\n               </div>\r\n               <div class=\"nav-right nav-trans-right\">\r\n                   <h3>chanung5722004@gmail.com</h3>\r\n               </div>\r\n           </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Nav;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport Loading from './components/Loading';\r\nimport Nav from './components/Nav';\r\nimport Wrapper from './components/Wrapper';\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Wrapper></Wrapper>\r\n        \r\n                \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}