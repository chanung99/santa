{"version":3,"sources":["logo.svg","components/Wrapper.js","components/SkillSet.js","components/About.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Wrapper","className","href","Component","SkillSet","onClick","e","preventDefault","this","props","onChangePage","bind","About","data","selected_skill","length","value","App","state","skill","skillContens","id","name","setState","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"6IAAAA,EAAOC,QAAU,IAA0B,kC,oLCgC5BC,G,yLA1BP,OACI,yBAAKC,UAAU,WACX,yBAAKA,UAAU,WACf,yBAAKA,UAAU,eACX,yBAAKA,UAAU,SAAf,sFACkB,oDADlB,uBAGA,yBAAKA,UAAU,UACX,gDAGR,yBAAKA,UAAU,OACX,4BACI,4BAAI,uBAAGC,KAAK,KAAR,SACJ,4BAAI,uBAAGA,KAAK,KAAR,UACJ,4BAAI,uBAAGA,KAAK,KAAR,YACJ,4BAAI,uBAAGA,KAAK,KAAR,mB,GAnBNC,cC2BPC,G,6KA1BP,OACI,yBAAKH,UAAW,YAEZ,4BACI,4BAAI,uBAAGC,KAAK,IAAIG,QAAS,SAASC,GAC9BA,EAAEC,iBACFC,KAAKC,MAAMC,aAAa,MAC1BC,KAAKH,OAHH,gBAKJ,4BAAI,uBAAGN,KAAK,IAAIG,QAAS,SAASC,GAC9BA,EAAEC,iBACFC,KAAKC,MAAMC,aAAa,MAC1BC,KAAKH,OAHH,kBAKJ,4BAAI,uBAAGN,KAAK,IAAIG,QAAS,SAASC,GAC9BA,EAAEC,iBACFC,KAAKC,MAAMC,aAAa,MAC1BC,KAAKH,OAHH,c,GAhBDL,cCwDRS,G,6KApDP,IACIC,EAAOL,KAAKC,MAAMI,KAItB,IAHUL,KAAKC,MAAMK,eACb,EAEED,EAAKE,SAGf,OACI,yBAAKd,UAAU,SACX,yBAAKA,UAAU,gBACX,wCAEJ,yBAAKA,UAAU,eAGf,kBAAC,EAAD,CAAUS,aAAc,SAASM,GAC7BR,KAAKC,MAAMC,aAAaM,IAC1BL,KAAKH,QAENA,KAAKC,MAAMK,oB,GAtBRX,cC4CLc,E,kDAzCb,WAAYR,GAAO,IAAD,8BAChB,cAAMA,IAEDS,MAAQ,CACTC,MAAO,QACPL,eAAiB,EACjBM,aAAe,CACb,CAACC,GAAG,EAAIF,MAAQ,OAASG,KAAO,QAChC,CAACD,GAAG,EAAIF,MAAQ,MAAQG,KAAO,OAC/B,CAACD,GAAG,EAAIF,MAAQ,KAAOG,KAAO,MAC9B,CAACD,GAAG,EAAIF,MAAQ,KAAOG,KAAO,MAC9B,CAACD,GAAG,EAAIF,MAAQ,QAAUG,KAAO,SACjC,CAACD,GAAG,EAAIF,MAAQ,OAASG,KAAO,QAChC,CAACD,GAAG,EAAIF,MAAQ,SAAWG,KAAO,UAClC,CAACD,GAAG,EAAIF,MAAQ,SAAWG,KAAO,YAdxB,E,qDAuBhB,OAEE,yBAAKrB,UAAU,OAEb,kBAAC,EAAD,MAEA,kBAAC,EAAD,CAAOY,KAAML,KAAKU,MAAME,aAAcN,eAAgBN,KAAKU,MAAMJ,eAAgBJ,aAAc,SAASM,GACtGR,KAAKe,SAAS,CACZT,eAAiBE,KAEnBL,KAAKH,a,GAlCGL,aCMEqB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.0c616416.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React, { Component } from 'react';\r\nimport '../style/Wrapper.css';\r\n\r\nclass Wrapper extends Component{\r\n    \r\n    render(){\r\n        return(\r\n            <div className=\"Wrapper\">\r\n                <div className=\"canvas\"></div>\r\n                <div className=\"text_remote\">\r\n                    <div className=\"intro\">\r\n                    안녕하세요, 웹 개발자를 꿈꾸는 <span>왕찬웅</span>입니다.\r\n                    </div>\r\n                    <div className=\"remote\">\r\n                        <span>View my Work</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"nav\">\r\n                    <ul>\r\n                        <li><a href=\"/\">HOME</a></li>\r\n                        <li><a href=\"/\">ABOUT</a></li>\r\n                        <li><a href=\"/\">PROJECT</a></li>\r\n                        <li><a href=\"/\">CONTACT</a></li>\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Wrapper;","import React, { Component } from 'react';   \r\nimport '../style/SkillSet.css';\r\nclass SkillSet extends Component{\r\n    render(){\r\n        return(\r\n            <div className =\"skillSet\">\r\n\r\n                <ul>\r\n                    <li><a href=\"/\" onClick={function(e){\r\n                        e.preventDefault();\r\n                        this.props.onChangePage(\"1\");\r\n                    }.bind(this)} >Front Skill</a></li>\r\n\r\n                    <li><a href=\"/\" onClick={function(e){\r\n                        e.preventDefault();\r\n                        this.props.onChangePage(\"2\");\r\n                    }.bind(this)}>BackEnd Skill</a></li>\r\n\r\n                    <li><a href=\"/\" onClick={function(e){\r\n                        e.preventDefault();\r\n                        this.props.onChangePage(\"3\");\r\n                    }.bind(this)}>etc</a></li>\r\n                    \r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default SkillSet;","import React, { Component } from 'react';\r\nimport SkillSet from '../components/SkillSet'; \r\nimport '../style/About.css';\r\n\r\nclass About extends Component{\r\n    render(){\r\n        var lists = [];\r\n        var data = this.props.data;\r\n        var num = this.props.selected_skill;\r\n        var i = 0;\r\n\r\n        while(i < data.length){\r\n            \r\n        }\r\n        return(\r\n            <div className=\"About\">\r\n                <div className=\"About_header\">\r\n                    <span>About</span>\r\n                </div>\r\n                <div className=\"header_bar\">\r\n                    \r\n                </div>\r\n                <SkillSet onChangePage={function(value){\r\n                    this.props.onChangePage(value);\r\n                }.bind(this)}></SkillSet>\r\n\r\n                {this.props.selected_skill}\r\n\r\n\r\n\r\n\r\n                {/* <div className=\"About_text\">\r\n                    <span>어린 시절부터 버튼을 누르면 반응하는 것에 재미를 느꼈고, 컴퓨터에 관심을 갖고 개발자를 꿈꾸었습니다.</span>\r\n                </div> */}\r\n                {/* <div className=\"profile_skill\">\r\n                    <div className=\"profile\">\r\n                        <div className=\"profile_img\"></div>\r\n                        <div>제 사진넣을곳</div>\r\n                    </div>\r\n\r\n                    <div className=\"skill\">\r\n                        <ul>\r\n                            <li><div className=\"HTML skillBox\"></div></li>\r\n                            <li><div className=\"CSS skillBox\"></div></li>\r\n                            <li><div className=\"JS skillBox\"></div></li>\r\n                            <li><div className=\"JQ skillBox\"></div></li>\r\n                            <li><div className=\"JAVA skillBox\"></div></li>\r\n                            <li><div className=\"ORACLE skillBox\"></div></li>\r\n                            <li><div className=\"SPRING skillBox\"></div></li>\r\n                            <li><div className=\"REACT skillBox\"></div></li>\r\n                        </ul>\r\n                    </div>  \r\n                </div> */}\r\n            </div>\r\n        );\r\n    }   \r\n}\r\n\r\nexport default About;","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './style/App.css';\r\nimport Wrapper from './components/Wrapper';\r\nimport About from './components/About'; \r\nimport SkillSet from './components/SkillSet'; \r\nclass App extends Component {\r\n  constructor(props){\r\n    super(props);\r\n\r\n    this.state = {\r\n        skill: 'front',\r\n        selected_skill : 1 ,\r\n        skillContens : [\r\n          {id:1 , skill : \"HTML\" , name : \"HTML\" },\r\n          {id:1 , skill : \"CSS\" , name : \"CSS\" },\r\n          {id:1 , skill : \"JS\" , name : \"JS\" },\r\n          {id:1 , skill : \"JQ\" , name : \"JQ\" },\r\n          {id:1 , skill : \"REACT\" , name : \"REACT\" },\r\n          {id:2 , skill : \"JAVA\" , name : \"JAVA\" },\r\n          {id:2 , skill : \"ORACLE\" , name : \"ORACLE\" },\r\n          {id:3 , skill : \"SPRING\" , name : \"SPRING\" }\r\n        \r\n        ]\r\n      \r\n    } \r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n      \r\n      <div className=\"App\">\r\n        \r\n        <Wrapper></Wrapper>\r\n        \r\n        <About data={this.state.skillContens} selected_skill={this.state.selected_skill} onChangePage={function(value){\r\n          this.setState({\r\n            selected_skill : value\r\n          });\r\n        }.bind(this)}></About>\r\n        \r\n                \r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}